upstream auth_backend {
	server 127.0.0.1:9100 max_conns=1;
	keepalive 1;
}

upstream fw_backend {
	server 127.0.0.1:9200 max_conns=1;
	keepalive 1;
}

upstream app_backend {
	server 127.0.0.1:9300 max_conns=1;
	keepalive 1;
}

server {
#	listen 443 ssl http2 default_server;

	# The backlog number must match with sysctl net.core.somaxconn output
	listen 80 default_server backlog=4096;

	root /usr/share/www/localhost/html;

	index index.html;

	encrypted_session_key "abcdefghijklmnopqrstuvwxyz123456";
	encrypted_session_iv "1234567812345678";
	encrypted_session_expires 1d;

	set $username '';
	if ($cookie_auth) {
		set_decode_base64 $session $cookie_auth;
		set_decrypt_session $username $session;
	}
	if ($username = '') {
		set $username 'unknown';
	}
	rewrite ^/api.* $request_uri/$username/$request_method break;

	location /auth {
		proxy_pass http://auth_backend/auth/user;
		proxy_http_version 1.1;
		proxy_set_header Connection "";
		proxy_pass_request_body off;
		proxy_set_header Content-Length "";

		set_encrypt_session $session $remote_user;
		set_encode_base64 $session;
		add_header Set-Cookie 'auth=$session; path=/';
	
		location = /auth/root {
			internal;
			proxy_pass http://auth_backend/auth/root;
			# Needed to authenticate POST request 
			# on api/firmware/upgrade
			client_max_body_size 0;
		}
	}

	location @uploaded {
		proxy_pass http://fw_backend;
		proxy_read_timeout 1000;
	}

	# Avoid circular redirection of the 302
	location /login {}
	location /fonts {}
	location /images {}

	location / {
		if ($username = 'unknown') {
			return 302 /login/index.html;
		}
	
		if ($http_user_agent ~ Mozilla) {
			error_page 404 /200.html;
		}

		include /etc/nginx/location-conf.d/*.conf;
	}
}
