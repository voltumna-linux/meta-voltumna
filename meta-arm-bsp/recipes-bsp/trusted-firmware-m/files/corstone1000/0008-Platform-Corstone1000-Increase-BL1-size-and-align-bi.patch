From d708753e317c89dead0759e3ffa6ecabef5a84a3 Mon Sep 17 00:00:00 2001
From: Harsimran Singh Tungal <harsimransingh.tungal@arm.com>
Date: Thu, 21 Aug 2025 09:12:25 +0000
Subject: [PATCH 1/2] Platform: Corstone1000: Increase BL1 size and align
 binary addresses

The move to Trusted-Firmware-M v2.2.1 makes the BL1 code larger,
while the provisioning bundle can be trimmed.  At the same time BL2 and
TF-M binary addresses now need to begin on a 0x100-byte boundary for
Cortex-M0+ based platforms.

Key changes
--------------------------------
- Increase `BL1_1_CODE_SIZE` to 58KB to accommodate the v2.2.1 binaries.
- Reduce `PROVISIONING_DATA_SIZE` to 6KB.
- `BL2_CODE_START` and `S_CODE_START` are aligned to 0x100 byte boundary
   so both start addresses are an exact multiple of 0x100.

Upstream-Status: Backport [d56178638a49c8c964aab3bff69ed8396dd6d8fc]
Signed-off-by: Harsimran Singh Tungal <harsimransingh.tungal@arm.com>
---
 .../arm/corstone1000/partition/region_defs.h  | 29 ++++++++++---------
 1 file changed, 15 insertions(+), 14 deletions(-)

diff --git a/platform/ext/target/arm/corstone1000/partition/region_defs.h b/platform/ext/target/arm/corstone1000/partition/region_defs.h
index 3e1294484..92e01c0e3 100644
--- a/platform/ext/target/arm/corstone1000/partition/region_defs.h
+++ b/platform/ext/target/arm/corstone1000/partition/region_defs.h
@@ -24,6 +24,10 @@
 #include "flash_layout.h"
 #include "bl1_2_config.h"
 
+/* Align address to 0x100 bytes boundary */
+#define ADDR_ALIGN               0x100
+#define ALIGN_UP_100(addr)       (((addr + (ADDR_ALIGN - 1)) / ADDR_ALIGN) * ADDR_ALIGN)
+
 /* BL1_1 */
 #define BL1_1_HEAP_SIZE         (0x0001000) /* 4KiB */
 #define BL1_1_MSP_STACK_SIZE    (0x0001800) /* 6KiB */
@@ -43,14 +47,10 @@
 
 #define BOOT_TFM_SHARED_DATA_SIZE (0x400)
 
-#define IMAGE_TFM_CODE_SIZE \
-            (TFM_PARTITION_SIZE - BL2_HEADER_SIZE - BL2_TRAILER_SIZE)
-
-#define IMAGE_BL2_CODE_SIZE \
-            (SE_BL2_PARTITION_SIZE - TFM_BL1_2_HEADER_MAX_SIZE)
-
 /* Secure regions */
-#define S_CODE_START            (SRAM_BASE + BL2_HEADER_SIZE)
+#define S_CODE_START            ALIGN_UP_100(SRAM_BASE + BL2_HEADER_SIZE)
+#define S_CODE_ALIGNMENT_DIFF   (S_CODE_START - (SRAM_BASE + BL2_HEADER_SIZE))
+#define IMAGE_TFM_CODE_SIZE     (TFM_PARTITION_SIZE - BL2_HEADER_SIZE - BL2_TRAILER_SIZE - S_CODE_ALIGNMENT_DIFF)
 #define S_CODE_SIZE             (IMAGE_TFM_CODE_SIZE)
 #define S_CODE_LIMIT            (S_CODE_START + S_CODE_SIZE - 1)
 
@@ -80,12 +80,13 @@
 #define SECONDARY_PARTITION_START 0
 #define SECONDARY_PARTITION_SIZE (TFM_PARTITION_SIZE)
 
-
 /* SE BL2 regions */
-#define BL2_IMAGE_START   (SRAM_BASE + SRAM_SIZE - SE_BL2_PARTITION_SIZE)
-#define BL2_CODE_START    (BL2_IMAGE_START + TFM_BL1_2_HEADER_MAX_SIZE)
-#define BL2_CODE_SIZE     (IMAGE_BL2_CODE_SIZE)
-#define BL2_CODE_LIMIT    (BL2_CODE_START + BL2_CODE_SIZE - 1)
+#define BL2_IMAGE_START            (SRAM_BASE + SRAM_SIZE - SE_BL2_PARTITION_SIZE)
+#define BL2_CODE_START             ALIGN_UP_100(BL2_IMAGE_START + TFM_BL1_2_HEADER_MAX_SIZE)
+#define BL2_CODE_ALIGNMENT_DIFF    (BL2_CODE_START - (BL2_IMAGE_START + TFM_BL1_2_HEADER_MAX_SIZE))
+#define IMAGE_BL2_CODE_SIZE        (SE_BL2_PARTITION_SIZE - TFM_BL1_2_HEADER_MAX_SIZE - BL2_CODE_ALIGNMENT_DIFF)
+#define BL2_CODE_SIZE              (IMAGE_BL2_CODE_SIZE)
+#define BL2_CODE_LIMIT             (BL2_CODE_START + BL2_CODE_SIZE - 1)
 
 #define BL2_DATA_START    (S_DATA_START)
 #define BL2_DATA_SIZE     (BL2_IMAGE_START - BL2_DATA_START)
@@ -93,11 +94,11 @@
 
 /* SE BL1 regions */
 #define BL1_1_CODE_START    (0)
-#define BL1_1_CODE_SIZE     (0x0000C800)     /* 50 KiB */
+#define BL1_1_CODE_SIZE     (0x0000E800)     /* 58 KiB */
 #define BL1_1_CODE_LIMIT    (BL1_1_CODE_START + BL1_1_CODE_SIZE - 1)
 
 #define PROVISIONING_DATA_START (BL1_1_CODE_START + BL1_1_CODE_SIZE)
-#define PROVISIONING_DATA_SIZE  (0x00002000)     /* 8 KiB */
+#define PROVISIONING_DATA_SIZE  (0x00001800)     /* 6 KiB */
 #define PROVISIONING_DATA_LIMIT (PROVISIONING_DATA_START + PROVISIONING_DATA_SIZE - 1)
 
 #define BL1_1_DATA_START    (SRAM_BASE)
-- 
2.43.0

