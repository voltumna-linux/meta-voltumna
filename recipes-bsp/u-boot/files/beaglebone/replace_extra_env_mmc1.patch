diff --git a/configs/am335x_evm_defconfig b/configs/am335x_evm_defconfig
index 9a61a04af9..38a25d4abf 100644
--- a/configs/am335x_evm_defconfig
+++ b/configs/am335x_evm_defconfig
@@ -9,7 +9,7 @@ CONFIG_DISTRO_DEFAULTS=y
 CONFIG_SPL_LOAD_FIT=y
 # CONFIG_USE_SPL_FIT_GENERATOR is not set
 CONFIG_OF_BOARD_SETUP=y
-CONFIG_BOOTCOMMAND="if test ${boot_fit} -eq 1; then run update_to_fit; fi; run findfdt; run init_console; run envboot; run finduuid; run distro_bootcmd"
+CONFIG_BOOTCOMMAND="run setconsole; run findfdt; for target in ${boot_targets}; do run loadscript_${target}; done; sleep 10; reset"
 CONFIG_LOGLEVEL=3
 CONFIG_SYS_CONSOLE_INFO_QUIET=y
 CONFIG_ARCH_MISC_INIT=y
diff --git a/include/configs/am335x_evm.h b/include/configs/am335x_evm.h
index 7d8e30db1a..bed9a605a9 100644
--- a/include/configs/am335x_evm.h
+++ b/include/configs/am335x_evm.h
@@ -102,44 +102,12 @@
 
 #define CONFIG_EXTRA_ENV_SETTINGS \
 	DEFAULT_LINUX_BOOT_ENV \
-	DEFAULT_MMC_TI_ARGS \
-	DEFAULT_FIT_TI_ARGS \
-	"boot=mmc\0" \
-	"bootpart=0:2\0" \
-	"bootdir=/boot\0" \
-	"bootfile=zImage\0" \
+	"autoload=no\0" \
+	"bootfile=boot.scr.uimg\0" \
+	"krnfile=zImage\0" \
 	"fdtfile=undefined\0" \
-	"console=ttyO0,115200n8\0" \
-	"partitions=" \
-		"uuid_disk=${uuid_gpt_disk};" \
-		"name=bootloader,start=384K,size=1792K," \
-			"uuid=${uuid_gpt_bootloader};" \
-		"name=rootfs,start=2688K,size=-,uuid=${uuid_gpt_rootfs}\0" \
+	"setconsole=setenv console ttyS0,${baudrate}n8\0" \
 	"optargs=\0" \
-	"ramroot=/dev/ram0 rw\0" \
-	"ramrootfstype=ext2\0" \
-	"spiroot=/dev/mtdblock4 rw\0" \
-	"spirootfstype=jffs2\0" \
-	"spisrcaddr=0xe0000\0" \
-	"spiimgsize=0x362000\0" \
-	"spibusno=0\0" \
-	"spiargs=setenv bootargs console=${console} " \
-		"${optargs} " \
-		"root=${spiroot} " \
-		"rootfstype=${spirootfstype}\0" \
-	"ramargs=setenv bootargs console=${console} " \
-		"${optargs} " \
-		"root=${ramroot} " \
-		"rootfstype=${ramrootfstype}\0" \
-	"loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz\0" \
-	"spiboot=echo Booting from spi ...; " \
-		"run spiargs; " \
-		"sf probe ${spibusno}:0; " \
-		"sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; " \
-		"bootz ${loadaddr}\0" \
-	"ramboot=echo Booting from ramdisk ...; " \
-		"run ramargs; " \
-		"bootz ${loadaddr} ${rdaddr} ${fdtaddr}\0" \
 	"findfdt="\
 		"if test $board_name = A335BONE; then " \
 			"setenv fdtfile am335x-bone.dtb; fi; " \
@@ -167,16 +135,10 @@
 			"setenv fdtfile am335x-icev2-prueth.dtb; fi; " \
 		"if test $fdtfile = undefined; then " \
 			"echo WARNING: Could not determine device tree to use; fi; \0" \
-	"init_console=" \
-		"if test $board_name = A335_ICE; then "\
-			"setenv console ttyO3,115200n8;" \
-		"else " \
-			"setenv console ttyO0,115200n8;" \
-		"fi;\0" \
-	NANDARGS \
-	NETARGS \
-	DFUARGS \
-	BOOTENV
+	"boot_targets=usb dhcp sd\0" \
+	"loadscript_dhcp=dhcp; if tftp ${scriptaddr} ${bootfile}; then source ${scriptaddr}; run bootcmd_dhcp; fi;\0" \
+	"loadscript_sd=mmc rescan; if load mmc 0:1 ${scriptaddr} ${bootfile}; then source ${scriptaddr}; run bootcmd_sd; fi;\0" \
+	"loadscript_usb=usb start; if load usb 0:1 ${scriptaddr} ${bootfile}; then source ${scriptaddr}; run bootcmd_usb; fi;\0"
 #endif
 
 /* NS16550 Configuration */
diff --git a/include/configs/ti_armv7_common.h b/include/configs/ti_armv7_common.h
index c48c4c2398..faff81b872 100644
--- a/include/configs/ti_armv7_common.h
+++ b/include/configs/ti_armv7_common.h
@@ -46,17 +46,9 @@
  */
 #define DEFAULT_LINUX_BOOT_ENV \
 	"loadaddr=0x82000000\0" \
-	"kernel_addr_r=0x82000000\0" \
 	"fdtaddr=0x88000000\0" \
-	"dtboaddr=0x89000000\0" \
-	"fdt_addr_r=0x88000000\0" \
-	"rdaddr=0x88080000\0" \
-	"ramdisk_addr_r=0x88080000\0" \
 	"scriptaddr=0x80000000\0" \
-	"pxefile_addr_r=0x80100000\0" \
-	"fdtoverlay_addr_r=0x80200000\0" \
-	"bootm_size=0x10000000\0" \
-	"boot_fdt=try\0"
+	"bootm_size=0x10000000\0"
 
 #define DEFAULT_FIT_TI_ARGS \
 	"boot_fit=0\0" \
@@ -68,7 +60,7 @@
 		"do;" \
 		"setenv overlaystring ${overlaystring}'#'${overlay};" \
 		"done;\0" \
-	"run_fit=bootm ${addr_fit}#${fdtfile}${overlaystring}\0" \
+	"run_fit=bootm ${addr_fit}#${fdtfile}${overlaystring}\0"
 
 /*
  * DDR information.  If the CONFIG_NR_DRAM_BANKS is not defined,
diff --git a/include/configs/ti_omap5_common.h b/include/configs/ti_omap5_common.h
index de0a6af2fd..9e1edbd1fe 100644
--- a/include/configs/ti_omap5_common.h
+++ b/include/configs/ti_omap5_common.h
@@ -60,13 +60,12 @@
 
 #define CONFIG_EXTRA_ENV_SETTINGS \
 	DEFAULT_LINUX_BOOT_ENV \
-	DEFAULT_MMC_TI_ARGS \
-	DEFAULT_FIT_TI_ARGS \
 	DEFAULT_COMMON_BOOT_TI_ARGS \
 	DEFAULT_FDT_TI_ARGS \
-	DFUARGS \
-	NETARGS \
-	NANDARGS \
+	"boot_targets=usb sd\0" \
+	"loadscript_dhcp=dhcp; if tftp ${scriptaddr} ${bootfile}; then source ${scriptaddr}; run bootcmd_dhcp; fi;\0" \
+	"loadscript_sd=mmc rescan; if load mmc 0:1 ${scriptaddr} ${bootfile}; then source ${scriptaddr}; run bootcmd_sd; fi;\0" \
+	"loadscript_usb=usb start; if load usb 0:1 ${scriptaddr} ${bootfile}; then source ${scriptaddr}; run bootcmd_usb; fi;\0"
 
 /*
  * SPL related defines.  The Public RAM memory map the ROM defines the
diff --git a/include/environment/ti/boot.h b/include/environment/ti/boot.h
index a598607ead..2d6baa0639 100644
--- a/include/environment/ti/boot.h
+++ b/include/environment/ti/boot.h
@@ -132,69 +132,12 @@
 	"fastboot " __stringify(CONFIG_FASTBOOT_USB_DEV) "; "
 
 #define DEFAULT_COMMON_BOOT_TI_ARGS \
-	"console=" CONSOLEDEV ",115200n8\0" \
+	"autoload=no\0" \
+	"bootfile=boot.scr.uimg\0" \
+	"krnfile=zImage\0" \
 	"fdtfile=undefined\0" \
-	"boot=mmc\0" \
-	"bootpart=0:2\0" \
-	"bootdir=/boot\0" \
-	"bootfile=zImage\0" \
-	"usbtty=cdc_acm\0" \
-	"vram=16M\0" \
-	AVB_VERIFY_CMD \
-	"partitions=" PARTS_DEFAULT "\0" \
-	"optargs=\0" \
-	"dofastboot=0\0" \
-	"emmc_linux_boot=" \
-		"echo Trying to boot Linux from eMMC ...; " \
-		"setenv mmcdev 1; " \
-		"setenv bootpart 1:2; " \
-		"setenv mmcroot /dev/mmcblk0p2 rw; " \
-		"run mmcboot;\0" \
-	"emmc_android_bcb_load=" \
-		"if bcb load " __stringify(CONFIG_FASTBOOT_FLASH_MMC_DEV) " " \
-		CONTROL_PARTITION "; then " \
-			"setenv ardaddr -; " \
-			"if bcb test command = bootonce-bootloader; then " \
-				"echo Android: Bootloader boot...; " \
-				"bcb clear command; bcb store; " \
-				FASTBOOT_CMD \
-				"exit; " \
-			"elif bcb test command = boot-recovery; then " \
-				"echo Android: Recovery boot...; " \
-				"setenv ardaddr $loadaddr;" \
-				"setenv apart recovery; " \
-			"else " \
-				"echo Android: Normal boot...; " \
-				"setenv ardaddr $loadaddr; " \
-				"setenv apart boot${slot_suffix}; " \
-			"fi; " \
-		"else " \
-			"echo Warning: BCB is corrupted or does not exist; " \
-			"echo Android: Normal boot...; " \
-		"fi;\0" \
-	PREPARE_FDT \
-	"emmc_android_bootm=" \
-		"if part start mmc $mmcdev $apart boot_start; then " \
-			"part size mmc $mmcdev $apart boot_size; " \
-			"mmc read $loadaddr $boot_start $boot_size; " \
-			"run prepare_fdt; " \
-			"bootm $loadaddr $ardaddr $fdtaddr; " \
-		"else " \
-			"echo $apart partition not found; " \
-			"exit; " \
-		"fi;\0" \
-	"emmc_android_boot=" \
-		"setenv mmcdev 1; " \
-		"mmc dev $mmcdev; " \
-		"mmc rescan; " \
-		AB_SELECT_SLOT \
-		"run emmc_android_bcb_load; " \
-		"setenv eval_bootargs setenv bootargs $bootargs; " \
-		"run eval_bootargs; " \
-		"setenv machid fe6; " \
-		AVB_VERIFY_CHECK \
-		AB_SELECT_ARGS \
-		"run emmc_android_bootm;\0" \
+	"setconsole=setenv console ttyS0,${baudrate}n8\0" \
+	"optargs=\0"
 
 #ifdef CONFIG_OMAP54XX
 
@@ -251,20 +194,13 @@
 			"echo WARNING: Could not determine device tree to use; fi; \0"
 
 #define CONFIG_BOOTCOMMAND \
-	"if test ${dofastboot} -eq 1; then " \
-		"echo Boot fastboot requested, resetting dofastboot ...;" \
-		"setenv dofastboot 0; saveenv;" \
-		FASTBOOT_CMD \
-	"fi;" \
-	"if test ${boot_fit} -eq 1; then "	\
-		"run update_to_fit;"	\
-	"fi;"	\
+	"run setconsole; " \
 	"run findfdt; " \
-	"run envboot; " \
-	"run mmcboot;" \
-	"run emmc_linux_boot; " \
-	"run emmc_android_boot; " \
-	""
+	"for target in ${boot_targets}; " \
+		"do run loadscript_${target}; " \
+	"done; " \
+	"sleep 10; " \
+	"reset"
 
 #endif /* CONFIG_OMAP54XX */
 
