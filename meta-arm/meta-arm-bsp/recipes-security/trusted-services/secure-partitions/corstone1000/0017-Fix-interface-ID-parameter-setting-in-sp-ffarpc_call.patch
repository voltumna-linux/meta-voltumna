Upstream-Status: Pending [Not submitted to upstream yet]
Signed-off-by: Vishnu Banavath <vishnu.banavath@arm.com>

From 5ea2bdc34efcbbd235091341027d86fd8d9ffb16 Mon Sep 17 00:00:00 2001
From: Julian Hall <julian.hall@arm.com>
Date: Wed, 8 Dec 2021 11:48:28 +0000
Subject: [PATCH] Fix interface ID parameter setting in sp/ffarpc_caller

When making FFA based RPC calls from one SP to another, the
destination interface ID parameter was not being set correctly.
This change fixes this issue.

Signed-off-by: Julian Hall <julian.hall@arm.com>
Change-Id: Iab520e4c7dc63ee1f5d3bf1bd1de702e4cc6f093

diff --git a/components/rpc/ffarpc/caller/sp/ffarpc_caller.c b/components/rpc/ffarpc/caller/sp/ffarpc_caller.c
index 250b178..dabcd90 100644
--- a/components/rpc/ffarpc/caller/sp/ffarpc_caller.c
+++ b/components/rpc/ffarpc/caller/sp/ffarpc_caller.c
@@ -81,7 +81,7 @@ static rpc_status_t call_invoke(void *context, rpc_call_handle handle, uint32_t
 	req.destination_id = this_context->dest_partition_id;
 	req.source_id = own_id;
 	req.args[SP_CALL_ARGS_IFACE_ID_OPCODE] =
-		FFA_CALL_ARGS_COMBINE_IFACE_ID_OPCODE(this_context->dest_partition_id, opcode);
+		FFA_CALL_ARGS_COMBINE_IFACE_ID_OPCODE(this_context->dest_iface_id, opcode);
 	//TODO: downcast problem?
 	req.args[SP_CALL_ARGS_REQ_DATA_LEN] = (uint32_t)this_context->req_len;
 	req.args[SP_CALL_ARGS_ENCODING] = this_context->rpc_caller.encoding;
-- 
2.25.1

