From e4edbdae9a2dbfec6fd0706bdfff8abdfe3363fc Mon Sep 17 00:00:00 2001
From: Anuj Mittal <anuj.mittal@intel.com>
Date: Wed, 29 Nov 2023 12:42:57 +0530
Subject: [PATCH] cmake: yocto specific tweaks to the build process

* Dont try to detect glibc version as that doesn't work when cross compiling.
* Dont try to detect CXX11_ABI
* Install sample binaries as well.
* Dont try to write triggers for CPack. We package ourselves.
* Fix the installation path for Python modules when baselib = lib64.

Upstream-Status: Inappropriate

Signed-off-by: Anuj Mittal <anuj.mittal@intel.com>
---
 cmake/developer_package/packaging/rpm/rpm.cmake | 2 +-
 cmake/developer_package/target_flags.cmake      | 4 ++--
 samples/cpp/CMakeLists.txt                      | 6 +++---
 src/bindings/python/CMakeLists.txt              | 2 +-
 4 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/cmake/developer_package/packaging/rpm/rpm.cmake b/cmake/developer_package/packaging/rpm/rpm.cmake
index 99f11730983..1a1f61fcd3d 100644
--- a/cmake/developer_package/packaging/rpm/rpm.cmake
+++ b/cmake/developer_package/packaging/rpm/rpm.cmake
@@ -156,7 +156,7 @@ ov_rpm_specific_settings()
 # needed to add triggers for packages with libraries
 set(def_triggers "${OpenVINO_BINARY_DIR}/_CPack_Packages/triggers")
 set(triggers_content "# /bin/sh -p\n/sbin/ldconfig\n")
-file(WRITE "${def_triggers}" "${triggers_content}")
+#file(WRITE "${def_triggers}" "${triggers_content}")
 
 #
 # Functions helpful for packaging your modules with RPM cpack
diff --git a/cmake/developer_package/target_flags.cmake b/cmake/developer_package/target_flags.cmake
index d047a1aebd9..4e8ca68c60f 100644
--- a/cmake/developer_package/target_flags.cmake
+++ b/cmake/developer_package/target_flags.cmake
@@ -149,7 +149,7 @@ function(ov_glibc_version)
     endif()
 endfunction()
 
-ov_glibc_version()
+#ov_glibc_version()
 
 #
 # Detects default value for _GLIBCXX_USE_CXX11_ABI for current compiler
@@ -160,4 +160,4 @@ macro(ov_get_glibcxx_use_cxx11_abi)
     endif()
 endmacro()
 
-ov_get_glibcxx_use_cxx11_abi()
+#ov_get_glibcxx_use_cxx11_abi()
diff --git a/samples/cpp/CMakeLists.txt b/samples/cpp/CMakeLists.txt
index 4d33bff944e..3e7f1458578 100644
--- a/samples/cpp/CMakeLists.txt
+++ b/samples/cpp/CMakeLists.txt
@@ -206,9 +206,9 @@ macro(ov_add_sample)
     target_link_libraries(${SAMPLE_NAME} PRIVATE ${ov_link_libraries} Threads::Threads ${SAMPLE_DEPENDENCIES})
 
     install(TARGETS ${SAMPLE_NAME}
-            RUNTIME DESTINATION samples_bin/
-            COMPONENT samples_bin
-            EXCLUDE_FROM_ALL)
+            DESTINATION ${CMAKE_INSTALL_BINDIR}
+            COMPONENT samples_bin)
+
 
     # create global target with all samples / demo apps
     if(NOT TARGET ov_samples)
diff --git a/src/bindings/python/CMakeLists.txt b/src/bindings/python/CMakeLists.txt
index 6cf43ec3fed..d539b9d003f 100644
--- a/src/bindings/python/CMakeLists.txt
+++ b/src/bindings/python/CMakeLists.txt
@@ -320,7 +320,7 @@ if(ENABLE_PYTHON_PACKAGING)
     # install OpenVINO Python API
 
     set(python_package_prefix "${CMAKE_CURRENT_BINARY_DIR}/install_${pyversion}")
-    set(install_lib "${python_package_prefix}/lib/${python_versioned_folder}/${ov_site_packages}")
+    set(install_lib "${python_package_prefix}/${CMAKE_INSTALL_LIBDIR}/${python_versioned_folder}/${ov_site_packages}")
     set(openvino_meta_info_subdir "openvino-${OpenVINO_VERSION}-py${python_xy}.egg-info")
     set(openvino_meta_info_file "${install_lib}/${openvino_meta_info_subdir}/PKG-INFO")
 
-- 
2.34.1

