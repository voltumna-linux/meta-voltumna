From 55ed4b2682ca1400dd698cef66fa579396d6c2f1 Mon Sep 17 00:00:00 2001
From: Ramesh Garidapuri <ramesh.Garidapuri@amd.com>
Date: Fri, 25 Aug 2023 13:40:50 +0530
Subject: [PATCH 18/31] amd-xgbe: WA patch to fix the AN issue

    AQR phy fails in doing AN when repeated phy_start_aneg() is
    called when AN is in progress.

Change-Id: I99e2646fb145b83c9b5bd6d7f91b73af629df609
---
 drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c | 13 +++++++++++--
 drivers/net/ethernet/amd/xgbe/xgbe.h        |  1 +
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c b/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
index 5eb958b4a7b0..9d823ef723f5 100755
--- a/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-phy-v2.c
@@ -1903,6 +1903,7 @@ static int xgbe_phy_an_config(struct xgbe_prv_data *pdata)
 	struct ethtool_link_ksettings *lks = &pdata->phy.lks;
 	struct xgbe_phy_data *phy_data = pdata->phy_data;
 	int ret;
+	unsigned long link_timeout;
 
 	ret = xgbe_phy_find_phy_device(pdata);
 	if (ret)
@@ -1927,8 +1928,16 @@ static int xgbe_phy_an_config(struct xgbe_prv_data *pdata)
 		   */
 		return 0;
 	}
-
-	ret = phy_start_aneg(phy_data->phydev);
+	netif_dbg(pdata, link, pdata->netdev, " phy_start_aneg pdata->an_mode %d \n",pdata->an_mode);
+	if (pdata->an_mode == XGBE_AN_MODE_MDIO){
+		link_timeout = pdata->phy_link_check + (XGBE_LINK_TIMEOUT*2 * HZ);
+		if (time_after(jiffies, link_timeout)) {
+			ret = phy_start_aneg(phy_data->phydev);
+			pdata->phy_link_check = jiffies;
+		} else
+			netif_dbg(pdata, link, pdata->netdev, "  phy_start_aneg  not called\n");
+	}else
+		ret = phy_start_aneg(phy_data->phydev);
 
 	return ret;
 }
diff --git a/drivers/net/ethernet/amd/xgbe/xgbe.h b/drivers/net/ethernet/amd/xgbe/xgbe.h
index 784db4299879..4ce8cfe3f14e 100755
--- a/drivers/net/ethernet/amd/xgbe/xgbe.h
+++ b/drivers/net/ethernet/amd/xgbe/xgbe.h
@@ -1272,6 +1272,7 @@ struct xgbe_prv_data {
 	struct xgbe_phy phy;
 	int mdio_mmd;
 	unsigned long link_check;
+	unsigned long phy_link_check;
 	struct completion mdio_complete;
 	unsigned int ext_fixed_phy;
 
-- 
2.34.1

