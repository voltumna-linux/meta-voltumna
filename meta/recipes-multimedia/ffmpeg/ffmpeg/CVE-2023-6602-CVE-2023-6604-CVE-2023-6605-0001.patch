From 3ef588940eef62742d28171bf212a474206f8e03 Mon Sep 17 00:00:00 2001
From: Michael Niedermayer <michael@niedermayer.cc>
Date: Mon, 15 May 2023 00:54:50 +0200
Subject: [PATCH] avformat: add ff_match_url_ext()

Match url against a list of extensions similar to av_match_ext()

Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>
(cherry picked from commit a7b06bfc5d20b12ff0122702c09517cf359fbb66)
Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>

CVE: CVE-2023-6604 CVE-2023-6602 CVE-2023-6605

Upstream-Status: Backport [https://github.com/FFmpeg/FFmpeg/commit/3ef588940ee]

Signed-off-by: Archana Polampalli <archana.polampalli@windriver.com>
---
 libavformat/format.c   | 25 +++++++++++++++++++++++++
 libavformat/internal.h |  9 +++++++++
 2 files changed, 34 insertions(+)

diff --git a/libavformat/format.c b/libavformat/format.c
index 52b85c1..5e057d7 100644
--- a/libavformat/format.c
+++ b/libavformat/format.c
@@ -48,6 +48,31 @@ int av_match_ext(const char *filename, const char *extensions)
     return 0;
 }

+int ff_match_url_ext(const char *url, const char *extensions)
+{
+    const char *ext;
+    URLComponents uc;
+    int ret;
+    char scratchpad[128];
+
+    if (!url)
+        return 0;
+
+    ret = ff_url_decompose(&uc, url, NULL);
+    if (ret < 0 || !URL_COMPONENT_HAVE(uc, scheme))
+        return ret;
+    for (ext = uc.query; *ext != '.' && ext > uc.path; ext--)
+        ;
+
+    if (*ext != '.')
+        return 0;
+    if (uc.query - ext > sizeof(scratchpad))
+        return AVERROR(ENOMEM); //not enough memory in our scratchpad
+    av_strlcpy(scratchpad, ext + 1, FFMIN(sizeof(scratchpad), uc.query - ext));
+
+    return av_match_name(scratchpad, extensions);
+}
+
 const AVOutputFormat *av_guess_format(const char *short_name, const char *filename,
                                       const char *mime_type)
 {
diff --git a/libavformat/internal.h b/libavformat/internal.h
index bffb8e6..584b979 100644
--- a/libavformat/internal.h
+++ b/libavformat/internal.h
@@ -1015,6 +1015,15 @@ int ff_unlock_avformat(void);
  */
 void ff_format_set_url(AVFormatContext *s, char *url);

+/**
+ * Return a positive value if the given url has one of the given
+ * extensions, negative AVERROR on error, 0 otherwise.
+ *
+ * @param url        url to check against the given extensions
+ * @param extensions a comma-separated list of filename extensions
+ */
+int ff_match_url_ext(const char *url, const char *extensions);
+
 void avpriv_register_devices(const AVOutputFormat * const o[], const AVInputFormat * const i[]);

 /**
--
2.40.0
