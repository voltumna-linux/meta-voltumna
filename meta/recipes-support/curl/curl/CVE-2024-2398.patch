Backport of:

From deca8039991886a559b67bcd6701db800a5cf764 Mon Sep 17 00:00:00 2001
From: Stefan Eissing <stefan@eissing.org>
Date: Wed, 6 Mar 2024 09:36:08 +0100
Subject: [PATCH] http2: push headers better cleanup

- provide common cleanup method for push headers

Closes #13054

Upstream-Status: Backport [import from ubuntu https://git.launchpad.net/ubuntu/+source/curl/tree/debian/patches/CVE-2024-2398.patch?h=ubuntu/jammy-security
Upstream commit https://github.com/curl/curl/commit/deca8039991886a559b67bcd6701db800a5cf764]
CVE: CVE-2024-2398
Signed-off-by: Vijay Anusuri <vanusuri@mvista.com>
---
 lib/http2.c | 34 +++++++++++++++-------------------
 1 file changed, 15 insertions(+), 19 deletions(-)

--- a/lib/http2.c
+++ b/lib/http2.c
@@ -555,6 +555,15 @@ static int set_transfer_url(struct Curl_
   return 0;
 }
 
+static void free_push_headers(struct HTTP *stream)
+{
+  size_t i;
+  for(i = 0; i<stream->push_headers_used; i++)
+    free(stream->push_headers[i]);
+  Curl_safefree(stream->push_headers);
+  stream->push_headers_used = 0;
+}
+
 static int push_promise(struct Curl_easy *data,
                         struct connectdata *conn,
                         const nghttp2_push_promise *frame)
@@ -568,7 +577,6 @@ static int push_promise(struct Curl_easy
     struct curl_pushheaders heads;
     CURLMcode rc;
     struct http_conn *httpc;
-    size_t i;
     /* clone the parent */
     struct Curl_easy *newhandle = duphandle(data);
     if(!newhandle) {
@@ -604,11 +612,7 @@ static int push_promise(struct Curl_easy
     Curl_set_in_callback(data, false);
 
     /* free the headers again */
-    for(i = 0; i<stream->push_headers_used; i++)
-      free(stream->push_headers[i]);
-    free(stream->push_headers);
-    stream->push_headers = NULL;
-    stream->push_headers_used = 0;
+    free_push_headers(stream);
 
     if(rv) {
       DEBUGASSERT((rv > CURL_PUSH_OK) && (rv <= CURL_PUSH_ERROROUT));
@@ -1045,10 +1049,10 @@ static int on_header(nghttp2_session *se
             stream->push_headers_alloc) {
       char **headp;
       stream->push_headers_alloc *= 2;
-      headp = Curl_saferealloc(stream->push_headers,
-                               stream->push_headers_alloc * sizeof(char *));
+      headp = realloc(stream->push_headers,
+                      stream->push_headers_alloc * sizeof(char *));
       if(!headp) {
-        stream->push_headers = NULL;
+        free_push_headers(stream);
         return NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE;
       }
       stream->push_headers = headp;
@@ -1214,15 +1218,7 @@ void Curl_http2_done(struct Curl_easy *d
      setup */
   Curl_dyn_free(&http->header_recvbuf);
   Curl_dyn_free(&http->trailer_recvbuf);
-  if(http->push_headers) {
-    /* if they weren't used and then freed before */
-    for(; http->push_headers_used > 0; --http->push_headers_used) {
-      free(http->push_headers[http->push_headers_used - 1]);
-    }
-    free(http->push_headers);
-    http->push_headers = NULL;
-  }
-
+  free_push_headers(http);
   if(!(data->conn->handler->protocol&PROTO_FAMILY_HTTP) ||
      !httpc->h2) /* not HTTP/2 ? */
     return;
