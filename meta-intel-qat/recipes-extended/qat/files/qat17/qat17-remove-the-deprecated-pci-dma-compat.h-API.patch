From 7286db78d263610e8a663a865bac83067e5848cd Mon Sep 17 00:00:00 2001
From: Yongxin Liu <yongxin.liu@windriver.com>
Date: Tue, 10 May 2022 09:13:39 +0800
Subject: [PATCH] remove the deprecated "pci-dma-compat.h" API

In kernel commit 7968778914e5 ("PCI: Remove the deprecated "pci-dma-compat.h"
API), all usages of the functions defined in "pci-dma-compat.h" have been
removed.

Upstream-Status: Inappropriate [Code released in tarball form only]

Signed-off-by: Yongxin Liu <yongxin.liu@windriver.com>
---
 quickassist/qat/drivers/crypto/qat/qat_200xx/adf_drv.c    | 8 ++++----
 quickassist/qat/drivers/crypto/qat/qat_200xxvf/adf_drv.c  | 8 ++++----
 quickassist/qat/drivers/crypto/qat/qat_c3xxx/adf_drv.c    | 8 ++++----
 quickassist/qat/drivers/crypto/qat/qat_c3xxxvf/adf_drv.c  | 8 ++++----
 quickassist/qat/drivers/crypto/qat/qat_c4xxx/adf_drv.c    | 8 ++++----
 quickassist/qat/drivers/crypto/qat/qat_c4xxxvf/adf_drv.c  | 8 ++++----
 quickassist/qat/drivers/crypto/qat/qat_c62x/adf_drv.c     | 8 ++++----
 quickassist/qat/drivers/crypto/qat/qat_c62xvf/adf_drv.c   | 8 ++++----
 quickassist/qat/drivers/crypto/qat/qat_d15xx/adf_drv.c    | 8 ++++----
 quickassist/qat/drivers/crypto/qat/qat_d15xxvf/adf_drv.c  | 8 ++++----
 quickassist/qat/drivers/crypto/qat/qat_dh895xcc/adf_drv.c | 8 ++++----
 .../qat/drivers/crypto/qat/qat_dh895xccvf/adf_drv.c       | 8 ++++----
 12 files changed, 48 insertions(+), 48 deletions(-)

diff --git a/quickassist/qat/drivers/crypto/qat/qat_200xx/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_200xx/adf_drv.c
index f2b5862..8b13bc7 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_200xx/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_200xx/adf_drv.c
@@ -182,17 +182,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if ((dma_set_mask(&pdev->dev, DMA_BIT_MASK(32)))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_200XX_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_200xxvf/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_200xxvf/adf_drv.c
index 0142305..70cb0b5 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_200xxvf/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_200xxvf/adf_drv.c
@@ -154,17 +154,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(32))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_200XXVF_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_c3xxx/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_c3xxx/adf_drv.c
index 29df562..89e1cbc 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_c3xxx/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_c3xxx/adf_drv.c
@@ -185,17 +185,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(32))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_C3XXX_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_c3xxxvf/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_c3xxxvf/adf_drv.c
index b7cc3a5..fcdc8c5 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_c3xxxvf/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_c3xxxvf/adf_drv.c
@@ -154,17 +154,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(32))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_C3XXXVF_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_c4xxx/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_c4xxx/adf_drv.c
index acc9b69..7e285a7 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_c4xxx/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_c4xxx/adf_drv.c
@@ -172,17 +172,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(32))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_C4XXX_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_c4xxxvf/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_c4xxxvf/adf_drv.c
index 83b3fa4..c82e1ef 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_c4xxxvf/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_c4xxxvf/adf_drv.c
@@ -153,17 +153,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(32))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_C4XXXVF_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_c62x/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_c62x/adf_drv.c
index da3df99..734e6a3 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_c62x/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_c62x/adf_drv.c
@@ -175,17 +175,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if ((dma_set_mask(&pdev->dev, DMA_BIT_MASK(32)))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_C62X_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_c62xvf/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_c62xvf/adf_drv.c
index 7ce7e88..de3088f 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_c62xvf/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_c62xvf/adf_drv.c
@@ -156,17 +156,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(32))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_C62XVF_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_d15xx/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_d15xx/adf_drv.c
index d923a1e..d237a9a 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_d15xx/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_d15xx/adf_drv.c
@@ -170,17 +170,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(32))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_D15XX_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_d15xxvf/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_d15xxvf/adf_drv.c
index b62f2f7..466206d 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_d15xxvf/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_d15xxvf/adf_drv.c
@@ -154,17 +154,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(32))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_D15XXVF_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_dh895xcc/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_dh895xcc/adf_drv.c
index f38a942..0dad051 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_dh895xcc/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_dh895xcc/adf_drv.c
@@ -170,17 +170,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if (dma_set_mask(&pdev->dev,DMA_BIT_MASK(32))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_DH895XCC_DEVICE_NAME)) {
diff --git a/quickassist/qat/drivers/crypto/qat/qat_dh895xccvf/adf_drv.c b/quickassist/qat/drivers/crypto/qat/qat_dh895xccvf/adf_drv.c
index 167e457..312435b 100644
--- a/quickassist/qat/drivers/crypto/qat/qat_dh895xccvf/adf_drv.c
+++ b/quickassist/qat/drivers/crypto/qat/qat_dh895xccvf/adf_drv.c
@@ -152,17 +152,17 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* set dma identifier */
-	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(48))) {
-		if ((pci_set_dma_mask(pdev, DMA_BIT_MASK(32)))) {
+	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(48))) {
+		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(32))) {
 			dev_err(&pdev->dev, "No usable DMA configuration\n");
 			ret = -EFAULT;
 			goto out_err_disable;
 		} else {
-			pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(32));
+			dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		}
 
 	} else {
-		pci_set_consistent_dma_mask(pdev, DMA_BIT_MASK(48));
+		dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(48));
 	}
 
 	if (pci_request_regions(pdev, ADF_DH895XCCVF_DEVICE_NAME)) {
-- 
2.46.2

